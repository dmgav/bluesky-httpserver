# -*- coding: utf-8 -*-
#
# ophyd documentation build configuration file, created by
# sphinx-quickstart on Fri Nov  7 11:18:58 2014.
#
# This file is execfile()d with the current directory set to its containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.
import bluesky_httpserver

# Add any Sphinx extension module names here, as strings. They can be extensions
# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
extensions = [
    'sphinx.ext.autodoc',
    'sphinx.ext.autosummary',
    'sphinx.ext.githubpages',
    'sphinx.ext.intersphinx',
    'sphinx.ext.mathjax',
    'sphinx.ext.viewcode',
    'IPython.sphinxext.ipython_directive',
    'IPython.sphinxext.ipython_console_highlighting',
    # 'matplotlib.sphinxext.plot_directive',
    'numpydoc',
    # For the card element
    "sphinx_design",
]

# If true, Sphinx will warn about all references where the target cannot
# be found.
# nitpicky = True

# The suffix of source filenames.
source_suffix = ".rst"

# The master toctree document.
master_doc = "index"

# General information about the project.
project = "bluesky-httpserver"
copyright = "2021-2022, Brookhaven National Laboratory"

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = bluesky_httpserver.__version__
# The full version, including alpha/beta/rc tags.
release = bluesky_httpserver.__version__

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"

# -- Options for HTML output ---------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = "pydata_sphinx_theme"
github_repo = project
github_user = "bluesky"

# Theme options for pydata_sphinx_theme
html_theme_options = dict(
    use_edit_page_button=False,
    github_url=f"https://github.com/{github_user}/{github_repo}",
    icon_links=[
        dict(
            name="PyPI",
            url=f"https://pypi.org/project/{project}",
            icon="fas fa-cube",
        ),
        dict(
            name="Gitter",
            url="https://gitter.im/NSLS-II/DAMA",
            icon="fas fa-person-circle-question",
        ),
    ],
    external_links=[
        dict(
            name="Bluesky Project",
            url="https://blueskyproject.io",
        )
    ],
)

html_sidebars = {
    "**": ["sidebar-nav-bs", "sidebar-ethical-ads"]
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# A dictionary of values to pass into the template engineâ€™s context for all pages
html_context = dict(
    github_user=github_user,
    github_repo=project,
    github_version="master",
    doc_path="docs",
)

# html_logo = "images/bluesky_ophyd_logo.svg"
# html_favicon = "images/ophyd_favicon.svg"

# Example configuration for intersphinx: refer to the Python standard library.
intersphinx_mapping = {
    "python": ("https://docs.python.org/3", None),
    "bluesky": ("https://blueskyproject.io/bluesky/", None),
    "databroker": ("https://blueskyproject.io/databroker/", None),
    "event-model": ("https://blueskyproject.io/event-model/", None),
}

# inheritance_graph_attrs = dict(rankdir="LR")
# inheritance_node_attrs = dict(fontsize=24)
autosummary_generate = True
autodoc_docstring_signature = True
autoclass_content = "both"
# numpydoc config

numpydoc_show_class_members = False
